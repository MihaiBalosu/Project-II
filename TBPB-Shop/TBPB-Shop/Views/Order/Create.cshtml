@model TBPB_Shop.ViewModel.NewOrderViewModel
@using TBPB_Shop.ViewModel

<h2 class="header-order-details">Order details</h2>



<div class="d-flex flex-column">
    <div class="main-container container-allign ">
        <span class="numberCircle"> <span> 1 </span> </span>
        <span class="delivery-method"> Delivery method </span>

        <div class="d-flex">
            <div class="delivery-courier">
                <input type="radio" value="courier" id="courier" onclick="selectDeliveryOption(this.id)" name="radioDelivery" checked />
                <span> Delivery courier </span>
            </div>

            <div class="delivery-courier">
                <input type="radio" value="personalLift" id="personalLift" onclick="selectDeliveryOption(this.id)" name="radioDelivery" />
                <span> Personal lift </span>
            </div>
        </div>
        <div class="container-bill">
            <div id="courierData">
                <partial name="_CourierForm" />
            </div>

            <div id="personalLiftData">
                <partial name="_PersonalLiftForm" />
            </div>
        </div>
    </div>


    <div class="main-container container-allign">
        <div>
            <span class="numberCircle"> <span> 2 </span> </span>
            <span class="delivery-method"> Billing data </span>
        </div>

        <div class="container-bill">
            <div class="d-flex container-bill-types">
                <a id="physicsPerson" isClicked="true" onclick="selectBillOption(this.id)" class="billing-data-types"> Physics person </a>
                <a id="legalPerson" isClicked="false" class="billing-data-types" onclick="selectBillOption(this.id)"> Legal person </a>
                <a id="NGO" isClicked="false" class="billing-data-types" onclick="selectBillOption(this.id)"> NGO </a>
            </div>

            <div id="physicsPersonData">
                <partial name="_PhysicsPersonForm" />
            </div>

            <div id="legalPersonData">
                <partial name="_LegalPersonForm" />
            </div>

            <div id="NGOData">
                <partial name="_NGOForm" />
            </div>
        </div>
    </div>


    <div class="main-container container-allign">
        <div>
            <span class="numberCircle"> <span> 3 </span> </span>
            <span class="delivery-method"> Payment method </span>
        </div>

        <div class="container-bill">
            <div class="payment-method">
                <input id="card" type="radio" name="radioPaymentMethod" onclick="selectPaymentOption(this.id)" />
                <span> Card online </span>
            </div>

            <div id="cardData">
                <partial name="_CardForm" model="new CardViewModel()"/>
            </div>

            <div class="line-separator-payments"></div>

            <div class="payment-method">
                <input id="courierRefund" type="radio" name="radioPaymentMethod" onclick="selectPaymentOption(this.id)" />

                <span> Courier refund </span>
            </div>

            <div class="courier-refund-payment">
                <div id="courierRefundData">

                    <p> You will pay when the order is delivered </p>

                    <p class="courier-refund-message">
                        Cost for processing payment upon delivery: 5
                        <sup> 00 </sup>
                        Lei. Online payment by card is free.
                    </p>

                </div>
            </div>

        </div>

    </div>

    <div class="container-total-order container-allign">
        <div class="d-flex flex-row">
            <div class="p-2 dimension-total-order">

                <p class="add-sumar-order">
                    Add Order
                </p>

                <div class="d-flex">
                    <div class="p-2 final-cost-label">
                        Products cost:
                    </div>

                    <div class="p-2 ml-auto final-cost-value">
                        <span id="products-total-price-int" class="money-int"> @Model.GetNaturalPart(Model.TotalProductsPrice) </span>

                        <sup id="products-total-price-decimal" class="money-decimal"> @Model.GetCommaPart(Model.TotalProductsPrice) </sup>

                        <span class="money-currency"> Lei </span>
                    </div>
                </div>

                <div class="d-flex">
                    <div class="mr-auto p-2 delivery-process-label">
                        Delivery and
                        <p> processing cost: </p>
                    </div>

                    <div class="p-2 delivery-process-value">
                        <span id="order-delivery-price" class="money-int"> @Model.GetNaturalPart(Model.DeliveryPrice) </span>

                        <sup class="money-decimal"> @Model.GetCommaPart(Model.DeliveryPrice) </sup>

                        <span class="money-currency"> Lei </span>
                    </div>
                </div>
            </div>

            <div class="p-2 vertical-line-separator"></div>

            <div class="p-2 total-price-order">
                <div class="total-price-label"> Total: </div>

                <div class="total-price-value">
                    <span id="order-total-price" class="money-int"> @Model.GetNaturalPart(Model.TotalPrice) </span>

                    <sup id="total-price-decimal" class="money-decimal"> @Model.GetCommaPart(Model.TotalPrice) </sup>
                    
                    <span class="money-currency"> Lei </span>
                </div>

                <form asp-action="Add">
                    <input id="addressDelivery" type="hidden" asp-for="AddressDelivery" />
                    <input id="nameDelivery" type="hidden" asp-for="NameDelivery" />
                    <input id="phoneDelivery" type="hidden" asp-for="PhoneDelivery" />
                    <input id="cityDelivery" type="hidden" asp-for="CityDelivery" />
                    <input id="districtDelivery" type="hidden" asp-for="DistrictDelivery" />
                    <input id="typeDelivery" type="hidden" asp-for="TypeDelivery" />

                    <input id="addressBilling" type="hidden" asp-for="AddressBilling" />
                    <input id="nameBilling" type="hidden" asp-for="NameBilling" />
                    <input id="phoneBilling" type="hidden" asp-for="PhoneBilling" />
                    <input id="cityBilling" type="hidden" asp-for="CityBilling" />
                    <input id="districtBilling" type="hidden" asp-for="DistrictBilling" />
                    <input id="typeBilling" type="hidden" asp-for="TypeBilling" />

                    <input id="totalPriceProductsOrder" type="hidden" asp-for="TotalProductsPrice" />
                    <input id="priceDeliveryOrder" type="hidden" asp-for="DeliveryPrice" />
                    <input id="totalPriceOrder" type="hidden" asp-for="TotalPrice" />
                    <input id="typePayment" type="hidden" asp-for="TypePayment" />

                    <button onclick="getFormData()" asp-action="Add" class="btn-primary complete-order">Complete order</button>
                </form>
            </div>
        </div>
    </div>

</div>


@section scripts{
    <script>
        $(document).ready(function () {
            document.getElementById("personalLiftData").style.display = "none";

            document.getElementById("physicsPerson").style.border = "2px solid #1763AA";
            document.getElementById("legalPersonData").style.display = "none";
            document.getElementById("NGOData").style.display = "none";

            document.getElementById("cardData").style.display = "none";
            document.getElementById("courierRefundData").style.display = "none";
        });

        var arrayBillTypesId = ["physicsPerson", "legalPerson", "NGO"];
        var arrayDeliveryMethodsId = ["courier", "personalLift"];
        var arrayPaymentsId = ["card", "courierRefund"];

        function selectBillOption(id) {
            for (var i = 0; i < arrayBillTypesId.length; i++) {
                var formId = arrayBillTypesId[i] + "Data";

                var option = document.getElementById(arrayBillTypesId[i]);
                var form = document.getElementById(formId);

                if (id == arrayBillTypesId[i]) {
                    option.style.border = "2px solid #1763AA";
                    form.style.display = "inline";
                    option.setAttribute("isClicked", "true");
                }
                else {
                    option.style.border = "none";
                    form.style.display = "none";
                    option.setAttribute("isClicked", "false");
                }
            }
        }

        function selectDeliveryOption(id) {
            for (var i = 0; i < arrayDeliveryMethodsId.length; i++) {
                var formId = arrayDeliveryMethodsId[i] + "Data";
                var form = document.getElementById(formId);

                if (id == arrayDeliveryMethodsId[i]) {
                    form.style.display = "inline";
                }
                else {
                    form.style.display = "none";
                }
            }
        }

        function selectPaymentOption(id) {
            for (var i = 0; i < arrayPaymentsId.length; i++) {
                var formId = arrayPaymentsId[i] + "Data";
                var form = document.getElementById(formId);

                if (id == arrayPaymentsId[i]) {
                    form.style.display = "inline";
                }
                else {
                    form.style.display = "none";
                }
            }
            if (document.getElementById("courierRefund").checked == true) {
                var valueTotalPrice = @Model.GetNaturalPart(Model.TotalPrice) + 5;
                var valueDeliveryPrice = @Model.GetNaturalPart(Model.DeliveryPrice) + 5;
                document.getElementById("order-total-price").innerHTML = valueTotalPrice;
                document.getElementById("order-delivery-price").innerHTML = valueDeliveryPrice;
            } else {
                var valueTotalPrice = @Model.GetNaturalPart(Model.TotalPrice);
                var valueDeliveryPrice = @Model.GetNaturalPart(Model.DeliveryPrice);
                document.getElementById("order-total-price").innerHTML = valueTotalPrice;
                document.getElementById("order-delivery-price").innerHTML = 5;
                document.getElementById("order-delivery-price").innerHTML = valueDeliveryPrice;
            }

        }

        function getFormData() {
            deliveryData();
            billingData();
            paymentData();
        }

        function deliveryData() {
            if (document.getElementById("courier").checked == true) {
                document.getElementById("typeDelivery").value = "Courier";
                document.getElementById("addressDelivery").value = document.getElementById("addressCourierDelivery").value;
                document.getElementById("phoneDelivery").value = document.getElementById("phoneCourierDelivery").value;
                document.getElementById("nameDelivery").value = document.getElementById("nameCourierDelivery").value;
                document.getElementById("cityDelivery").value = document.getElementById("cityCourierDelivery").value;
                document.getElementById("districtDelivery").value = document.getElementById("districtCourierDelivery").value;
            }

            if (document.getElementById("personalLift").checked == true) {
                document.getElementById("typeDelivery").value = "Personal lift";
                document.getElementById("addressDelivery").value = document.getElementById("addressPersonalLiftDelivery").value;
                document.getElementById("phoneDelivery").value = document.getElementById("phonePersonalLiftDelivery").value;
                document.getElementById("nameDelivery").value = document.getElementById("namePersonalLiftDelivery").value;
                document.getElementById("cityDelivery").value = document.getElementById("cityPersonalLiftDelivery").value;
                document.getElementById("districtDelivery").value = document.getElementById("districtPersonalLiftDelivery").value;
            }
        }

        function billingData() {
            if (document.getElementById("physicsPerson").getAttribute("isClicked") == "true") {
                document.getElementById("typeBilling").value = "Physics Person";
                document.getElementById("addressBilling").value = document.getElementById("addressPhysicsPersonBilling").value;
                document.getElementById("phoneBilling").value = document.getElementById("phonePhysicsPersonBilling").value;
                document.getElementById("nameBilling").value = document.getElementById("namePhysicsPersonBilling").value;
                document.getElementById("cityBilling").value = document.getElementById("cityPhysicsPersonBilling").value;
                document.getElementById("districtBilling").value = document.getElementById("districtPhysicsPersonBilling").value;
            }

            if (document.getElementById("legalPerson").getAttribute("isClicked") == "true") {
                document.getElementById("typeBilling").value = "Legal Person";
                document.getElementById("addressBilling").value = document.getElementById("addressLegalPersonBilling").value;
                document.getElementById("cityBilling").value = document.getElementById("cityLegalPersonBilling").value;
                document.getElementById("districtBilling").value = document.getElementById("districtLegalPersonBilling").value;
            }

            if (document.getElementById("NGO").getAttribute("isClicked") == "true") {
                document.getElementById("typeBilling").value = "NGO";
                document.getElementById("addressBilling").value = document.getElementById("addressNGOBilling").value;
                document.getElementById("cityBilling").value = document.getElementById("cityNGOBilling").value;
                document.getElementById("districtBilling").value = document.getElementById("districtNGOBilling").value;
            }
        }

        function paymentData() {
            if (document.getElementById("courierRefund").checked == true) {
                document.getElementById("typePayment").value = "Courier Refund";
            }

            if (document.getElementById("card").checked == true) {
                document.getElementById("typePayment").value = "Card";
            }
        }

        function priceData() {
            document.getElementById("totalPriceProductsOrder").value = @Model.TotalProductsPrice;
            document.getElementById("priceDeliveryOrder").value = @Model.DeliveryPrice;
            document.getElementById("totalPriceOrder").value = @Model.TotalPrice;
        }

    </script>
}
